# Правильная скобочная последовательность
# Входные данные содержат несколько строк, каждая из которых содержит последовательность символов (, ), [ и ]. 
Выясните, является ли она правильной скобочной последовательностью с двумя типами скобок.

Входные данные:
Не более 500500 строк, каждая из которых содержит скобочную последовательность длиной не более чем в 10^4 символов.

Выходные данные
Для каждой строки входных данных выведите в выходной файл YES, если соответствующая последовательность является правильной 
скобочной последовательностью, или NO, если не является.



#include <iostream>

struct Node {
    Node *next;
    int key;
};


struct Stack {
    int size = 0;
    Node *head = nullptr;

    bool empty() {
        return size == 0;
    }

    Stack *push(int key) {
        Node *newNode = new Node;
        newNode->next = head;
        newNode->key = key;
        head = newNode;
        size++;
    }

    Stack *pop() {
        if (empty()) {
            std::cout << "Stack is empty!!!" << '\n';
        } else {
            Node *del = head;
            head = head->next;
            size--;
            delete del;
        }
    }
};


int main() {
    Stack St;
    std::string str;
    bool fl = true;
    while (std::cin >> str) {
        for (int i = 0; i < str.length(); ++i) {
            if (str[i] == '(' || str[i] == '[') {
                St.push(str[i]);
            } else if (St.size > 0 && (str[i] == ')' || str[i] == ']')) {
                if (str[i] == ')') {
                    if (St.head->key == '(') {
                        St.pop();
                    } else {
                        fl = false;
                        break;
                    }
                } else if (str[i] == ']') {
                    if (St.head->key == '[') {
                        St.pop();
                    } else {
                        fl = false;
                        break;
                    }
                }
            } else {
                fl = false;
                break;
            }
        }
        if (St.size != 0) {
            fl = false;
        }
        if (!fl) {
            std::cout << "NO\n";
        } else {
            std::cout << "YES\n";
        }
    }
    return 0;
}

_____________________________________________________________________________
STDIN	|| STDOUT
()()  ||  YES
([])  ||  YES
([)]  ||  NO
((]]  ||  NO
)(    ||  NO