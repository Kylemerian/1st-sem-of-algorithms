#include <iostream>

void PrintArray(int n, int arr[]);

void Merge(int arr[], int left, int mid, int right);

void MergeSort(int arr[], int l, int r);



int main() {
    int n;
    std::cin >> n;
    int arr[n];
    for (int i = 0; i < n; ++i) {
        std::cin >> arr[i];
    }
    MergeSort(arr, 0, n);
    PrintArray(n, arr);
    return 0;
}




void MergeSort(int arr[], int left, int right) {
    if (left + 1 >= right)
        return;
    int mid = (left + right) / 2;
    MergeSort(arr, left, mid);
    MergeSort(arr, mid, right);
    Merge(arr, left, mid, right);
}

void Merge(int arr[], int left, int mid, int right) {
    int i = 0, j = 0;
    int sarr[right - left];

    while (left + i < mid && mid + j < right) {
        if (arr[left + i] < arr[mid + j]) {
            sarr[i + j] = arr[left + i];
            i++;
        } else {
            sarr[i + j] = arr[mid + j];
            j++;
        }
    }
    while (left + i < mid) {
        sarr[i + j] = arr[left + i];
        i++;
    }
    while (mid + j < right) {
        sarr[i + j] = arr[mid + j];
        j++;
    }

    for (int k = 0; k < (i + j); k++) {
        arr[left + k] = sarr[k];
    }
}

void PrintArray(int n, int arr[]) {
    for (int i = 0; i < n; ++i) {
        std::cout << arr[i] << ' ';
    }
}
